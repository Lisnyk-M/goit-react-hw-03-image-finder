{"version":3,"sources":["components/Modal/Modal.module.css","components/App.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/ReactSpinnerLoader/ReactSpinnerLoader.module.css","components/SearchBar/SearchBar.module.css","components/Notification/Notification.js","services/articlesApi.js","components/SearchBar/SearchBar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/ReactSpinnerLoader/ReactSpinnerLoader.js","components/App.js","index.js","components/ImageGalleryItem/ImageGalleryItem.module.css"],"names":["module","exports","Notification","message","searchQuery","page","perPage","baseURL","axios","get","then","response","data","hits","SearchBar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","styles","Searchbar","id","SearchForm","this","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","imagePath","onClick","key","uuidv4","data-id","src","alt","ImageGalleryItem_image","ImageGallery","componentDidUpdate","images","map","image","webformatURL","Button","name","Modal","handleKeyDown","console","log","code","onClose","window","addEventListener","removeEventListener","Overlay","children","ReactSpinnerLoader","Loader","color","height","width","timeout","React","App","articles","loading","error","showModal","modalImagePath","didFounded","fetchArticles","gridGapImage","articlesApi","prevState","catch","finally","length","scrollHeight","Math","max","document","body","documentElement","offsetHeight","clientHeight","ul","querySelector","boxLi","lastElementChild","getBoundingClientRect","boxUl","searchBarHeight","countLiInRow","round","right","left","countLast12LiColumn","liOffset","bottom","top","scrollTo","behavior","handleSearchFormSubmit","query","toggleModal","closeModal","filtered","findIndex","el","toString","dataset","largeImageURL","prevProps","prevQuery","nextQuery","pageYOffset","ButtonWrap","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4fb11315.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2kgyc\",\"Modal\":\"Modal_Modal__2a2SL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1qDnZ\",\"ButtonWrap\":\"App_ButtonWrap__2KVBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__18Ptp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__4nWIe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"ReactSpinnerLoader_Loader__2l3r_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__X6j-z\",\"SearchForm\":\"SearchBar_SearchForm__1CChA\",\"SearchForm_button\":\"SearchBar_SearchForm_button__2bXJc\",\"SearchForm_button_label\":\"SearchBar_SearchForm_button_label__2jL7s\",\"SearchForm_input\":\"SearchBar_SearchForm_input__NPkVY\"};","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nfunction Notification({message}) {\r\n    return (\r\n        <p>{message}</p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;\r\n","import axios from 'axios';\r\n\r\nconst fetchArticlesWithQuery = (searchQuery, page = 1, perPage = 12) => {\r\n    const baseURL = 'https://pixabay.com/api/?&key=17921001-34fc34d57ac8e12c6e45b531b&q=';\r\n\r\n    return axios\r\n        .get(baseURL + searchQuery + `&page=${page}&per_page=${perPage}`)\r\n        .then(response => response.data.hits);        \r\n}\r\n\r\nexport default {\r\n    fetchArticlesWithQuery,\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './SearchBar.module.css';\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        inputValue: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({inputValue: e.target.value})\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.inputValue);\r\n        this.setState({inputValue: ''});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className={styles.Searchbar} id=\"SearchBar\">\r\n                <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className={styles.SearchForm_button}>\r\n                        <span className={styles.SearchForm_button_label}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={styles.SearchForm_input}\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SearchBar;\r\n\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ImageGalleryItem.module.css';\r\n\r\n\r\nconst ImageGalleryItem = ({imagePath, onClick, id}) => (\r\n    <li key={uuidv4()} className={styles.ImageGalleryItem}>\r\n        <img data-id={id} src={imagePath} alt=\"\" className={styles.ImageGalleryItem_image} onClick={onClick}/>\r\n    </li>\r\n)\r\n\r\nImageGalleryItem.propTypes = {\r\n    imagePath: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    id: PropTypes.number.isRequired\r\n}\r\n\r\nexport default ImageGalleryItem;","import React, { Component } from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ImageGallery.module.css';\r\n\r\nclass ImageGallery extends Component {\r\n    componentDidUpdate = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const { images, onClick } = this.props;\r\n\r\n        return (\r\n            <ul id=\"ImageGallery\" className={styles.ImageGallery}>\r\n                {images.map(image => (\r\n                    <ImageGalleryItem key={uuidv4()} imagePath={image.webformatURL} onClick={onClick} id={image.id} />\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape({\r\n        webformatURL: PropTypes.string.isRequired,\r\n        onClick: PropTypes.func,\r\n        id: PropTypes.number.isRequired\r\n    }))\r\n}\r\n\r\nexport default ImageGallery;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({name, onClick}) => (\r\n    <button className={styles.Button} onClick={() => onClick()}>{name}</button>\r\n)\r\n\r\nButton.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Modal.module.css';\r\n\r\nclass Modal extends Component {\r\n    componentDidMount () {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        console.log(e);\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.Overlay}>\r\n                <div className={styles.Modal} onClick={this.props.onClick}>{this.props.children}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    children: PropTypes.node.isRequired\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport styles from './ReactSpinnerLoader.module.css';\r\n\r\nclass ReactSpinnerLoader extends React.Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader className={styles.Loader}\r\n        type=\"TailSpin\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={0} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactSpinnerLoader;","import React, { Component } from 'react';\r\nimport Notification from './Notification/Notification';\r\nimport articlesApi from '../services/articlesApi';\r\nimport SearchBar from './SearchBar/SearchBar';\r\nimport ImageGallery from './ImageGallery/ImageGallery';\r\nimport Button from './Button/Button';\r\nimport Modal from './Modal/Modal';\r\nimport ReactSpinnerLoader from './ReactSpinnerLoader/ReactSpinnerLoader';\r\nimport '../common.css';\r\nimport styles from './App.module.css';\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        articles: [],\r\n        loading: false,\r\n        error: null,\r\n        searchQuery: '',\r\n        page: 1,\r\n        showModal: false,\r\n        modalImagePath: '',\r\n        didFounded: false,\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const prevQuery = prevState.searchQuery;\r\n        const nextQuery = this.state.searchQuery;\r\n\r\n        console.log('Текущая прокрутка сверху: ' + window.pageYOffset);\r\n        if (prevQuery !== nextQuery) {\r\n            this.fetchArticles();\r\n        }\r\n    }\r\n\r\n    fetchArticles = (gridGapImage = 16, perPage = 12) => {\r\n        this.setState({ showModal: true });\r\n        this.setState({ loading: true });\r\n        const { searchQuery, page, articles } = this.state;\r\n\r\n        articlesApi.fetchArticlesWithQuery(searchQuery, page, perPage)\r\n            .then(articles => this.setState(prevState => ({\r\n                articles: [...prevState.articles, ...articles],\r\n                page: prevState.page + 1\r\n            })))\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            })\r\n            .finally(() => {\r\n                this.setState({ loading: false })\r\n                this.setState({ showModal: false, didFounded: true });\r\n                if (articles.length > 0) {\r\n                    let scrollHeight = Math.max(\r\n                        document.body.scrollHeight, document.documentElement.scrollHeight,\r\n                        document.body.offsetHeight, document.documentElement.offsetHeight,\r\n                        document.body.clientHeight, document.documentElement.clientHeight\r\n                    );\r\n\r\n                    const ul = document.querySelector('#ImageGallery')\r\n                    const li = ul.lastElementChild;\r\n                    const boxLi = li.getBoundingClientRect();\r\n                    const boxUl = ul.getBoundingClientRect();\r\n\r\n                    const searchBarHeight = document.querySelector('#SearchBar').offsetHeight;\r\n\r\n                    const countLiInRow = Math.round((boxUl.right - boxUl.left) / (boxLi.right - boxLi.left));\r\n                    const countLast12LiColumn = perPage / countLiInRow;\r\n                    const liOffset = ((boxLi.bottom - boxLi.top) + gridGapImage) *\r\n                        countLast12LiColumn + searchBarHeight + gridGapImage * 3.4;\r\n\r\n                    window.scrollTo({\r\n                        top: scrollHeight - liOffset,\r\n                        behavior: 'smooth',\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    handleSearchFormSubmit = query => {\r\n        this.setState({ searchQuery: query, page: 1, articles: [] })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState(state => ({ showModal: !state.showModal }));\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    showModal = (e) => {\r\n        const { articles } = this.state;\r\n        const filtered = articles.findIndex(el => {\r\n            return el.id.toString() === e.target.dataset.id;\r\n        });\r\n        this.setState({ showModal: true, modalImagePath: articles[filtered].largeImageURL });\r\n    }\r\n\r\n    render() {      \r\n        const { articles, loading, showModal, didFounded } = this.state;\r\n\r\n        return (\r\n            <div className={styles.App}> \r\n                <SearchBar onSubmit={this.handleSearchFormSubmit} />\r\n                <ImageGallery images={articles} onClick={this.showModal} />\r\n                {didFounded && articles.length === 0 && <Notification message=\"Not found\"/>}\r\n                {!loading && articles.length > 1 &&\r\n                    <div className={styles.ButtonWrap}>\r\n                        <Button name=\"Load more\" onClick={this.fetchArticles} />\r\n                    </div>}\r\n                <div>\r\n                    {showModal && <Modal onClose={this.toggleModal} onClick={this.closeModal}>\r\n                        {!loading && <img src={this.state.modalImagePath} alt=\"\"></img>}\r\n                        <ReactSpinnerLoader />\r\n                    </Modal>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2VfMK\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__2DEh0\"};"],"sourceRoot":""}